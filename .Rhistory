<<<<<<< Updated upstream
}
hist(corr_res)
hist(mean_res)
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(corr_res)
hist(mean_res)
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 10, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(corr_res)
hist(mean_res)
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 10, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(corr_res)
hist(mean_res)
#I snuck this in here, sorry if thats bad
peterData <- read_excel("lab13data.xlsx")
calorie <- read.csv("food_consumption.csv")
for (i in seq_along(colnames(calorie))){
colnames(calorie)[i] <- substr(colnames(calorie)[i], 2, 5)
}
calorieNAOmit <- na.omit(calorie)
names(calorieNAOmit)[1] <- "CountryNames"
calorieFinal <- calorieNAOmit %>%
gather("Year", "CalorieConsumption", -CountryNames)
rm(calorie)
rm(calorieNAOmit)
##final usable data is called CalorieFinal
sugar <- read.csv("sugar_consumption.csv")
for (i in seq_along(colnames(sugar))){
colnames(sugar)[i] <- substr(colnames(sugar)[i], 2, 5)
}
sugar[46] <- NULL
sugarNAOmit <- na.omit(sugar)
names(sugarNAOmit)[1] <- "CountryNames"
sugarFinal <- sugarNAOmit %>%
gather("Year", "SugarConsumption", -CountryNames)
rm(sugar)
rm(sugarNAOmit)
##final usable data is sugarFinal
bmi <- read.csv("bmi.csv")
for (i in seq_along(colnames(bmi))){
colnames(bmi)[i] <- substr(colnames(bmi)[i], 2, 5)
}
bmiNAOmit <- na.omit(bmi)
names(bmiNAOmit)[1] <- "CountryNames"
bmiFinal <- bmiNAOmit %>%
gather("Year", "BMI", -CountryNames)
rm(bmi)
rm(bmiNAOmit)
##final usable data is bmiFinal
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 10, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(corr_res)
hist(mean_res)
#I snuck this in here, sorry if thats bad
peterData <- read_excel("lab13data.xlsx")
calorie <- read.csv("food_consumption.csv")
for (i in seq_along(colnames(calorie))){
colnames(calorie)[i] <- substr(colnames(calorie)[i], 2, 5)
}
calorieNAOmit <- na.omit(calorie)
names(calorieNAOmit)[1] <- "CountryNames"
calorieFinal <- calorieNAOmit %>%
gather("Year", "CalorieConsumption", -CountryNames)
rm(calorie)
rm(calorieNAOmit)
##final usable data is called CalorieFinal
sugar <- read.csv("sugar_consumption.csv")
for (i in seq_along(colnames(sugar))){
colnames(sugar)[i] <- substr(colnames(sugar)[i], 2, 5)
}
sugar[46] <- NULL
sugarNAOmit <- na.omit(sugar)
names(sugarNAOmit)[1] <- "CountryNames"
sugarFinal <- sugarNAOmit %>%
gather("Year", "SugarConsumption", -CountryNames)
rm(sugar)
rm(sugarNAOmit)
##final usable data is sugarFinal
bmi <- read.csv("bmi.csv")
for (i in seq_along(colnames(bmi))){
colnames(bmi)[i] <- substr(colnames(bmi)[i], 2, 5)
=======
>>>>>>> Stashed changes
}
bmiNAOmit <- na.omit(bmi)
names(bmiNAOmit)[1] <- "CountryNames"
bmiFinal <- bmiNAOmit %>%
gather("Year", "BMI", -CountryNames)
rm(bmi)
rm(bmiNAOmit)
##final usable data is bmiFinal
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(corr_res)
hist(mean_res)
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(rnorm(1000))
hist(rnorm(1000))
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(rnorm(10))
hist(rnorm(10))
#I snuck this in here, sorry if thats bad
peterData <- read_excel("lab13data.xlsx")
calorie <- read.csv("food_consumption.csv")
for (i in seq_along(colnames(calorie))){
colnames(calorie)[i] <- substr(colnames(calorie)[i], 2, 5)
}
calorieNAOmit <- na.omit(calorie)
names(calorieNAOmit)[1] <- "CountryNames"
calorieFinal <- calorieNAOmit %>%
gather("Year", "CalorieConsumption", -CountryNames)
rm(calorie)
rm(calorieNAOmit)
##final usable data is called CalorieFinal
sugar <- read.csv("sugar_consumption.csv")
for (i in seq_along(colnames(sugar))){
colnames(sugar)[i] <- substr(colnames(sugar)[i], 2, 5)
}
sugar[46] <- NULL
sugarNAOmit <- na.omit(sugar)
names(sugarNAOmit)[1] <- "CountryNames"
sugarFinal <- sugarNAOmit %>%
gather("Year", "SugarConsumption", -CountryNames)
rm(sugar)
rm(sugarNAOmit)
##final usable data is sugarFinal
bmi <- read.csv("bmi.csv")
for (i in seq_along(colnames(bmi))){
colnames(bmi)[i] <- substr(colnames(bmi)[i], 2, 5)
}
bmiNAOmit <- na.omit(bmi)
names(bmiNAOmit)[1] <- "CountryNames"
bmiFinal <- bmiNAOmit %>%
gather("Year", "BMI", -CountryNames)
rm(bmi)
rm(bmiNAOmit)
##final usable data is bmiFinal
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
hist(rnorm(50))
hist(rnorm(50))
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
corr_res <- rnorm(50)
mean_res <- rnorm(51)
hist(corr_res)
hist(mean_res)
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
corr_res <- rnorm(50)
mean_res <- rnorm(51)
hist(corr_res)
hist(mean_res)
peterData <- na.omit(peterData)
names(peterData)[1] <- "country"
peterData <- peterData %>% gather("year", "energy", -country)
#iterative typecasting is crucial to preserving trends in the data
peterData <- peterData %>% mutate(intEnergy = map(energy, as.integer))
#Im hardcoding the permutation tests
corr_res = numeric(1000)
mean_res = numeric(1000)
view(peterData)
for (i in c(1:10)){
samp <- sample(peterData$intEnergy, 20, replace = FALSE)
samp <- as.vector(unlist(samp))
view(samp)
grp1 <- samp[1:10]
grp2 <- samp[10:19]
#grp1 <- as.vector(unlist(grp1))
#grp2 <- as.vector(unlist(grp2))
grp1 <- as.integer(grp1)
grp2 <- as.integer(grp2)
mix1 <- sample(grp2)
m1 <- mean(grp1)
m2 <- mean(grp2)
corRes <- cor(grp1, grp2)
mdRed <- as.double(m1)-as.double(m2)
corr_res[[i]] <- corRes
mean_res[[i]] <- mdRed
}
corr_res <- rnorm(50)
mean_res <- rnorm(51)
hist(corr_res)
hist(mean_res)
sdemocracy1 <- read.csv("democracyscore1.csv")
sdemocracy1 <- read.csv("democracyscore1.csv")
sdemocracy1 <- read.csv("democracyscore1.csv")
for(i in seq_along(colnames(sdemocracy1))){
colnames(sdemocracy1)[i] <- substr(colnames(sdemocracy1)[i], 2, 5)
}
names(sdemocracy1)[1] <- "le"
sdemocracy1g <- sdemocracy1 %>% gather("Year" , "Democracy Score", -le)
sdeomcracyN <- na.omit(sdemocracy1g)
slife <- read.csv("life_expectancy.csv")
for(i in seq_along(colnames(slife))){
colnames(slife)[i] <- substr(colnames(slife)[i], 2, 5)
}
names(slife)[1] <- "le"
slifeg <- slife %>% gather("Year" , "Life Expectancy", -le)
sdata <- slifeg %>%  full_join(sdeomcracyN, by.x = "Year",  by.y = "le")
sdataN <- na.omit(sdata)
perms <- 1000
vec1 <- numeric(perms)
vec2 <- numeric(perms)
for (i in c(1:perms)){
samp1 <- sample(sdataN$`Life Expectancy`, 300, replace = FALSE)
group1 <- samp1[1:150]
group2 <- samp1[151:299]
M1 = mean(group1)
M2 = mean(group2)
diffmean = M1 - M2
vec1[[i]] <- diffmean
samp2<- sample(sdataN$`Democracy Score`, 300, replace = FALSE)
group3 <- samp2[1:150]
group4 <- samp2[151 + 299]
M3 = mean(group3)
M4 = mean(group4)
diffmean2 = M3 - M4
vec2[[i]] <- diffmean2
}
ggplot(sdataN, aes(x = "Year", y = "Life Expectancy", color = le))+
geom_jitter()+
facet_wrap(~le)
library(tidyverse)
library(dplyr)
sdemocracy1 <- read.csv("democracyscore1.csv")
for(i in seq_along(colnames(sdemocracy1))){
colnames(sdemocracy1)[i] <- substr(colnames(sdemocracy1)[i], 2, 5)
}
names(sdemocracy1)[1] <- "le"
sdemocracy1g <- sdemocracy1 %>% gather("Year" , "Democracy Score", -le)
sdeomcracyN <- na.omit(sdemocracy1g)
slife <- read.csv("life_expectancy.csv")
for(i in seq_along(colnames(slife))){
colnames(slife)[i] <- substr(colnames(slife)[i], 2, 5)
}
names(slife)[1] <- "le"
slifeg <- slife %>% gather("Year" , "Life Expectancy", -le)
sdata <- slifeg %>%  full_join(sdeomcracyN, by.x = "Year",  by.y = "le")
sdataN <- na.omit(sdata)
perms <- 1000
vec1 <- numeric(perms)
vec2 <- numeric(perms)
for (i in c(1:perms)){
samp1 <- sample(sdataN$`Life Expectancy`, 300, replace = FALSE)
group1 <- samp1[1:150]
group2 <- samp1[151:299]
M1 = mean(group1)
M2 = mean(group2)
diffmean = M1 - M2
vec1[[i]] <- diffmean
samp2<- sample(sdataN$`Democracy Score`, 300, replace = FALSE)
group3 <- samp2[1:150]
group4 <- samp2[151 + 299]
M3 = mean(group3)
M4 = mean(group4)
diffmean2 = M3 - M4
vec2[[i]] <- diffmean2
}
ggplot(sdataN, aes(x = "Year", y = "Life Expectancy", color = le))+
geom_jitter()+
facet_wrap(~le)
